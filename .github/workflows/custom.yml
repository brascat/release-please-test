# Workflow to tag and increase tag
name: custom

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'The service to deploy'
        required: true


jobs:
  get_commit:
    runs-on: ubuntu-latest
    outputs:
      history: ${{steps.get_hash.outputs.history}}
      last_tag: ${{steps.get_next_tag.outputs.last_tag}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Calculate next Tag
        id: "get_next_tag"
        shell: bash
        # Simple incremental tag
        run: |
          LAST_TAG=$(git tag -l --sort=-v:refname "${{ github.event.inputs.service }}-*" | head -1)
          if [[ -z "${LAST_TAG}" ]]; then
            echo "No previous tag found."
          fi
          echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV
          CURRENT_VERSION="${LAST_TAG#*-}"
          NEXT_VERSION=$(( $CURRENT_VERSION + 1 ))
          NEXT_TAG="${{ github.event.inputs.service }}-$NEXT_VERSION"
          echo "${{ github.event.inputs.service }} : $LAST_TAG -> $NEXT_TAG"
          echo "NEXT_TAG=$NEXT_TAG" >> $GITHUB_ENV
      - name: Tag Last Commit
        uses: cardinalby/git-tag-action@master
        env:
          TAG: ${{ env.NEXT_TAG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # also can be done manually
#      - name: Generate Release Notes
#        id: "changelog"
#        uses: metcalfc/changelog-generator@v4.1.0
#        with:
#          myToken: ${{ secrets.GITHUB_TOKEN }}
#          head-ref: ${{ env.NEXT_TAG }}
#          base-ref: ${{ env.LAST_TAG }}
#      - name: Get Changelog
#        run: |
#          cat << "EOF"
#          ${{ steps.changelog.outputs.changelog }}
#          EOF
      - name: Create changelog
        id: "create_changelog"
        run: |
          commit_string=$(git rev-list ${{ env.LAST_TAG }}..HEAD)
          while IFS= read -r line; do
              commit_list+=("$line")
          done <<< "$commit_string"
          for commit in "${commit_list[@]}"
          do
            unset files_list
            unset files_string
            files_string=$(git diff-tree --no-commit-id --name-only -r $commit)
            while IFS= read -r line; do
              files_list+=("$line")
            done <<< "$files_string"
            echo "Files list: $files_list"
            echo "Files string: $files_string"
            found=false
            for file in "${files_list[@]}"
            do
              if [[ "$file" == ${{ github.event.inputs.service }}* ]]; then
                echo "$file at $commit is part of ${{ github.event.inputs.service }}"
                found=true
              else
                echo "$file at $commit is not part of ${{ github.event.inputs.service }}"
              fi
              echo "Found: $file"
            done
            if [ "$found" = true ]; then
              echo $(git log -n 1 --pretty=format:"%h %an %ad %s" $commit) >> changelog
            fi
          done
          echo "CHANGELOG=$(cat changelog)" >> $GITHUB_ENV
      - name: Create Release
        id: "create_release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEXT_TAG }}
          release_name: ${{ env.NEXT_TAG }}
          body: ${{ env.CHANGELOG }}


  print_commit:
    runs-on: ubuntu-latest
    needs: get_commit

    steps:
      - name: Print Last Commit
        run: echo "History':' ${{ github.event.inputs.tag }} \n ${{ needs.get_commit.outputs.history }}"
