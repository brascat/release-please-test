# Workflow to tag and increase tag
name: custom

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'The service to deploy'
        required: true
        type: choice
        options:
          - "service1"
          - "service2"


jobs:
  get_commit:
    runs-on: ubuntu-latest
    outputs:
      history: ${{steps.get_hash.outputs.history}}
      last_tag: ${{steps.get_next_tag.outputs.last_tag}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate next Tag
        id: "get_next_tag"
        shell: bash
        # Simple incremental tag
        run: |
          LAST_TAG=$(git tag -l --sort=-v:refname "${{ github.event.inputs.service }}-*" | head -1)
          if [[ -z "${LAST_TAG}" ]]; then
            echo "::error::No previous tag found"
            exit 1
          fi
          echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV
          CURRENT_VERSION="${LAST_TAG#*-}"
          NEXT_VERSION=$(( $CURRENT_VERSION + 1 ))
          NEXT_TAG="${{ github.event.inputs.service }}-$NEXT_VERSION"
          echo "${{ github.event.inputs.service }} : $LAST_TAG -> $NEXT_TAG"
          echo "NEXT_TAG=$NEXT_TAG" >> $GITHUB_ENV

      - name: Tag Last Commit
        uses: cardinalby/git-tag-action@master
        env:
          TAG: ${{ env.NEXT_TAG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # also can be done manually

      - name: Create changelog
        id: "create_changelog"
        run: |
          echo -e '## [${{ env.NEXT_TAG }}](https://github.com/brascat/release-please-test/compare/${{ env.LAST_TAG }}...${{ env.NEXT_TAG }}) $(date -I)' >> changelog
          echo '### What changed' >> changelog
          commit_list=($(git rev-list ${{ env.LAST_TAG }}..HEAD))
          for commit in "${commit_list[@]}"
          do
            files_string=($(git diff-tree --no-commit-id --name-only -r $commit))
            found=false
            for file in "${files_list[@]}"
            do
              if [[ "$file" == ${{ github.event.inputs.service }}* ]]; then
                echo "$file at $commit is part of ${{ github.event.inputs.service }}"
                found=true
              fi
            done
            if [ "$found" = true ]; then
              echo "* $(git log -n 1 --pretty=format:"%h (%an, %cs) %s" $commit)" >> changelog
            fi
          done
          # echo "CHANGELOG=$(cat changelog)" >> $GITHUB_ENV

      - name: Create Release
        id: "create_release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEXT_TAG }}
          release_name: ${{ env.NEXT_TAG }}
          body: ${{ env.CHANGELOG }}