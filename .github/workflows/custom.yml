# Workflow to tag and increase tag
name: custom

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'The service to deploy'
        required: false


jobs:
  get_commit:
    runs-on: ubuntu-latest
    outputs:
      history: ${{steps.get_hash.outputs.history}}
      last_tag: ${{steps.get_next_tag.outputs.last_tag}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Calculate next Tag
        id: "get_next_tag"
        shell: bash
        # Simple incremental tag
        run: |
          LAST_TAG=$(git tag -l --sort=-v:refname "${{ github.event.inputs.service }}-*" | head -1)
          echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV
          echo "Last tag for service ${{ github.event.inputs.service }} was $LAST_TAG"
          CURRENT_VERSION="${LAST_TAG#*-}"
          NEXT_VERSION=$(($CURRENT_VERSION+1))
          NEXT_TAG="${{ github.event.inputs.service }}-$NEXT_VERSION"
          echo "Next tag will be $NEXT_TAG"
          echo "NEXT_TAG=$NEXT_TAG" >> $GITHUB_ENV
      - name: Tag Last Commit
        uses: cardinalby/git-tag-action@master
        env:
          TAG: ${{ env.NEXT_TAG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Release Notes
        id: "changelog"
        uses: metcalfc/changelog-generator@v4.1.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
          head-ref: ${{ env.NEXT_TAG }}
          base-ref: ${{ env.LAST_TAG }}
      - name: Get Changelog
        run: |
          cat << "EOF"
          ${{ steps.changelog.outputs.changelog }}
          EOF
      - name: Create Release
        id: "create_release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEXT_TAG }}
          release_name: ${{ env.NEXT_TAG }}
          body: ${{ steps.changelog.outputs.changelog }}


  print_commit:
    runs-on: ubuntu-latest
    needs: get_commit

    steps:
      - name: Print Last Commit
        run: echo "History':' ${{ github.event.inputs.tag }} \n ${{ needs.get_commit.outputs.history }}"
